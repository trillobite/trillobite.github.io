<hr class="style-eight"></hr>
<h3>Introduction</h3>

First of all, thank you for taking your time to view this guide. You can click on "The Basics," on the left hand side to begin right away. If you are patient, and really want to know about jsonHTML in detail, you may enjoy reading what is below.
<br></br>

<q>What is it?</q> Well, in order for me to explain that to you, I must first tell you what it's not. jsonHTML is not a performance enhancer, it's not exactly a language, it's not exactly a compiler, it's not exactly a library, so now you see why it's
so incredibly difficult to describe! I can tell you what it does, and how it is within purgatory, unable to be classified under any type of project, if anything, you can say that it is a Language, a Compiler, and a code library at 17KB, all at the same time! By the way, you are looking at it right now, this web page was developed using jsonHTML.
<br></br>

<q>Why was it created?</q> I created jsonHTML for a project at my work, we needed a web GUI for our customers to be able to modify, and display their data on our SQL servers. As you may already know, there is no way to predict how much data is 
within a SQL table, they can vary in size wildly. If you want to display that data on the web, typically you would have to use something like PHP, but that requires more cpu cycles on our servers. jsonHTML takes what PHP would need to do, but has
it done on the client side, thus, creating something more like a Web App, very active and fluid.
<br></br>

<q>How does it do it, and what does jsonHTML stand for?</q> jsonHTML takes the jsonHTML syntax, compiles it down to <f>JSON</f> first, just as a simple way to organize and sort data for the rest of the compile process. Then once it goes to JSON, functions 
are parsed, stored in memory, div id's are generated or stored in hash tables, then jsonHTML child objects are appended to their parent objects. Once everything is put into memory, parsed, or executed, the remaining JSON is compiled down to 
<f>HTML5</f> spec objects. The HTML objects are managed extensively using jQuery, which is one reason jsonHTML's syntax is strikingly similar to jQuery, this prevents confusion and simplifies things for the programmer.
<br><br/>

<hr class="style-eight"></hr>
Before jsonHTML, to achieve the flexibility required for my projects, I had to write out the HTML as a string, and use jQuery to add them or manipulate them by parsing that string. This was tedious, especially compared to manipulating JSON objects as an abstraction layer. Basically put, by creating a JSON object to reflect what you want, jsonHTML takes your object and creates the string to pass to jQuery, then jQuery handles the rest. Think of jsonHTML as a compiler, or a jQuery shell, it takes javaScript (JSON) objects and compiles them down to HTML, where it is passed to jQuery, implemented into the DOM and the browser deals with them traditionally. 
It is also good to note, that if you are coming from a '.Net' environment to the Free Software society of the web, it may be easier to transition to the structured design of jsonHTML, rather than the fragmented world of developing for the web. jsonHTML definately helps to unify the common concepts of developing on the web, in an easy to use syntax.
<br></br>

If you are a more experienced programmer, you may notice that most of the example code below does not look like pure JSON, and in truth, you are correct! So why is this project called 'jsonHTML?' Basically, what you see below is due to the functionality that the $jConstruct contstructor gives you, without this you will have to write code in pure JSON. You can view the heart and soul of jsonHTML with the code examples near the bottom of this documentation.
<br></br>

So, if you would like to follow along, make sure to download the latest release, unpack, and give jsonHTML a try! It is assumed that you know the concepts of HTML, and javaScript. Having an understanding of jQuery is helpful, as jsonHTML largely depends on this library, but this understanding is not not mandatory. The documentation is still pretty basic as jsonHTML was not originally created to be released to the public, but as I moved the project to github, it became exposed to the public, and I have decided that it would be helpful to the free software coding community if my code was documented.